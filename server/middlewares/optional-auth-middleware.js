const tokenService = require('../service/token-service.js');

// Middleware –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç
module.exports = function (req, res, next) {
    try {
        const authorizationHeader = req.headers.authorization;
        
        if (!authorizationHeader) {
            console.log('üîì OptionalAuth: —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            req.user = null;
            return next();
        }
        
        const accessToken = authorizationHeader.split(' ')[1];
        if (!accessToken) {
            console.log('üîì OptionalAuth: accessToken –ø—É—Å—Ç–æ–π');
            req.user = null;
            return next();
        }

        const userData = tokenService.validateAccessToken(accessToken);
        if (!userData) {
            console.log('üîì OptionalAuth: —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π');
            req.user = null;
            return next();
        }

        console.log('üîê OptionalAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω -', userData.email, 'userId:', userData.id);
        req.user = userData;
        next();
    } catch (e) {
        console.log('üîì OptionalAuth error:', e.message);
        req.user = null;
        next();
    }
}

